{
  "info": {
    "_postman_id": "d5c0f7c3-206b-4963-bb8d-4a7e706b32b6",
    "name": "Admin Locations API",
    "description": "API for managing locations: creating, retrieving, and deleting locations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Create Location",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": "Set the request content type to JSON"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/admin/locations",
          "host": ["{{baseUrl}}"],
          "path": ["admin", "locations"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Concert Hall\",\n  \"lat\": 40.712776,\n  \"lon\": -74.005974,\n  \"radius\": 5000\n}"
        }
      },
      "response": []
    },
    {
      "name": "Get All Locations",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/admin/locations",
          "host": ["{{baseUrl}}"],
          "path": ["admin", "locations"]
        }
      },
      "response": []
    },
    {
      "name": "Delete Location",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": "Set the request content type to JSON"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/admin/locations/:locationId",
          "host": ["{{baseUrl}}"],
          "path": ["admin", "locations", ":locationId"],
          "variable": [
            {
              "key": "locationId",
              "value": "1",
              "type": "string"
            }
          ]
        }
      },
      "response": [
        {
          "code": 204,
          "body": "",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "code": 404,
          "body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Location with id=10 was not found\",\n  \"timestamp\": \"2024-11-16T12:35:00\"\n}",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Test for POST Create Location",
          "pm.test('Location created successfully', function () {",
          "    pm.response.to.have.status(201);",
          "    pm.expect(pm.response.json()).to.have.property('id');",
          "    pm.environment.set('locationId', pm.response.json().id);",
          "});",
          "",
          "// Test for DELETE Location",
          "pm.test('Status code is 204 for successful deletion', function () {",
          "    pm.response.to.have.status(204);",
          "    pm.expect(pm.response.text()).to.be.empty;",
          "});",
          "",
          "pm.test('Handle 404 for non-existent location', function () {",
          "    if (pm.response.code === 404) {",
          "        pm.expect(pm.response.json()).to.have.property('status', 'NOT_FOUND');",
          "        pm.expect(pm.response.json()).to.have.property('message');",
          "        pm.expect(pm.response.json().reason).to.equal('The required object was not found.');",
          "    }",
          "});"
        ]
      }
    }
  ]
}
